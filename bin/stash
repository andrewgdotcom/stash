exec < $0

# boilerplate

SCRIPT_DIR=$(dirname $(readlink -f "${BASH_SOURCE[0]}"))
. ${SCRIPT_DIR}/poshlib/poshlib.sh || exit 1
use swine
use flatten
use parse-opt

# All long arguments are lowercase versions of their corresponding envars
# with the prefix STASH_ removed.
PO_SIMPLE_PREFIX="STASH_"
PO_SIMPLE_PARAMS="DEBUG"

# parse command line options
eval $(parse-opt-simple)

# init

__STASH__dir=$(mktemp -d)

# jit compose

# write boilerplate

cat <<'EOF' > $__STASH__dir/main
#!/bin/bash
. ${SCRIPT_DIR}/poshlib/poshlib.sh || exit 1
use swine
use flatten
use parse-opt

EOF

cat <<EOF > $__STASH__dir/parse_opt_conf
eval \$(parse-opt-init)
EOF
echo ". $__STASH__dir/parse_opt_conf" >> $__STASH__dir/main


while IFS= read __STASH__inline
do
    # if not inside here-doc or not closing tag of here-doc, then
    #   remove trailing comments
    #   if continuation, slurp in next line and loop (deleting newline)
    #   tokenise
    #   detect structure
    # if opening structure, push structure stack and recurse
    # elif closing structure, pop structure stack and return
    # write out
    echo "$__STASH__outline" >> $__STASH__dir/main
    # loop
done

# execute

flatten $__STASH__dir/main

# cleanup

rm -rf $__STASH__dir

# explicitly exit so that we don't parse the calling file

exit
